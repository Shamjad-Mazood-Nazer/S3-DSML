{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyPV+Rx0Td5wyqpfVuA058W9"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":8,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Pc3Tze_jsbCH","executionInfo":{"status":"ok","timestamp":1669262327433,"user_tz":-330,"elapsed":4394,"user":{"displayName":"SHAMJAD MAZOOD NAZER RMCA 2021-2023 B","userId":"15753865148182756036"}},"outputId":"9eefadf2-a494-4baf-a9a1-c6245aa67884"},"outputs":[{"output_type":"stream","name":"stderr","text":["[nltk_data] Downloading package stopwords to /root/nltk_data...\n","[nltk_data]   Package stopwords is already up-to-date!\n","[nltk_data] Downloading package averaged_perceptron_tagger to\n","[nltk_data]     /root/nltk_data...\n","[nltk_data]   Package averaged_perceptron_tagger is already up-to-\n","[nltk_data]       date!\n","[nltk_data] Downloading package punkt to /root/nltk_data...\n","[nltk_data]   Unzipping tokenizers/punkt.zip.\n"]},{"output_type":"execute_result","data":{"text/plain":["True"]},"metadata":{},"execution_count":8}],"source":["# Setup\n","!pip install -q wordcloud\n","import wordcloud\n","import nltk\n","nltk.download('stopwords')\n","nltk.download('averaged_perceptron_tagger') \n","import pandas as pd\n","import matplotlib.pyplot as plt\n","import io\n","import unicodedata\n","import numpy as np\n","import re\n","import string\n","nltk.download('punkt')\n"]},{"cell_type":"code","source":["from collections import Counter\n","import nltk\n","text = \"Guru99 is one of the best sites to learn WEB, SAP, Ethical Hacking and much more online.\"\n","lower_case = text.lower()\n","tokens = nltk.word_tokenize(lower_case)\n","tags = nltk.pos_tag(tokens)\n","counts = Counter( tag for word,  tag in tags)\n","print(counts)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"PniGROQJvIyI","executionInfo":{"status":"ok","timestamp":1669262333036,"user_tz":-330,"elapsed":345,"user":{"displayName":"SHAMJAD MAZOOD NAZER RMCA 2021-2023 B","userId":"15753865148182756036"}},"outputId":"be4cec34-2565-4082-aad9-047a176b0d95"},"execution_count":9,"outputs":[{"output_type":"stream","name":"stdout","text":["Counter({'NN': 5, ',': 2, 'VBZ': 1, 'CD': 1, 'IN': 1, 'DT': 1, 'JJS': 1, 'NNS': 1, 'TO': 1, 'VB': 1, 'JJ': 1, 'CC': 1, 'RB': 1, 'JJR': 1, '.': 1})\n"]}]},{"cell_type":"code","source":["#data preprocessing using nltk\n","#1. counting tags\n","#2. bigrams\n","#3. trigrams\n","#4. stop words\n","#5. stemming\n","\n","import nltk\n","text = \"Amal Jyothi College of Engineering and Technology\"\n","Tokens = nltk.word_tokenize(text)\n","output = list(nltk.bigrams(Tokens))\n","print(output)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xNjwgTQayhVV","executionInfo":{"status":"ok","timestamp":1669262675854,"user_tz":-330,"elapsed":377,"user":{"displayName":"SHAMJAD MAZOOD NAZER RMCA 2021-2023 B","userId":"15753865148182756036"}},"outputId":"91a98d75-e1c1-4c77-95dd-c6ebc4a9ecae"},"execution_count":10,"outputs":[{"output_type":"stream","name":"stdout","text":["[('Amal', 'Jyothi'), ('Jyothi', 'College'), ('College', 'of'), ('of', 'Engineering'), ('Engineering', 'and'), ('and', 'Technology')]\n"]}]},{"cell_type":"code","source":["import nltk\n","text = \"Amal Jyothi College of Engineering and Technology\"\n","Tokens = nltk.word_tokenize(text)\n","output = list(nltk.trigrams(Tokens))\n","print(output)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NCzy-IoPzzjR","executionInfo":{"status":"ok","timestamp":1669262702841,"user_tz":-330,"elapsed":588,"user":{"displayName":"SHAMJAD MAZOOD NAZER RMCA 2021-2023 B","userId":"15753865148182756036"}},"outputId":"f59d7c4f-85a1-4445-fd19-a329d4d65cb8"},"execution_count":11,"outputs":[{"output_type":"stream","name":"stdout","text":["[('Amal', 'Jyothi', 'College'), ('Jyothi', 'College', 'of'), ('College', 'of', 'Engineering'), ('of', 'Engineering', 'and'), ('Engineering', 'and', 'Technology')]\n"]}]},{"cell_type":"code","source":["from nltk.corpus import stopwords\n","print(stopwords.words('english'))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"y74i-3fXz4ig","executionInfo":{"status":"ok","timestamp":1669264951648,"user_tz":-330,"elapsed":378,"user":{"displayName":"SHAMJAD MAZOOD NAZER RMCA 2021-2023 B","userId":"15753865148182756036"}},"outputId":"b82e974f-bedc-4555-b0e5-fa9be455d1aa"},"execution_count":53,"outputs":[{"output_type":"stream","name":"stdout","text":["['i', 'me', 'my', 'myself', 'we', 'our', 'ours', 'ourselves', 'you', \"you're\", \"you've\", \"you'll\", \"you'd\", 'your', 'yours', 'yourself', 'yourselves', 'he', 'him', 'his', 'himself', 'she', \"she's\", 'her', 'hers', 'herself', 'it', \"it's\", 'its', 'itself', 'they', 'them', 'their', 'theirs', 'themselves', 'what', 'which', 'who', 'whom', 'this', 'that', \"that'll\", 'these', 'those', 'am', 'is', 'are', 'was', 'were', 'be', 'been', 'being', 'have', 'has', 'had', 'having', 'do', 'does', 'did', 'doing', 'a', 'an', 'the', 'and', 'but', 'if', 'or', 'because', 'as', 'until', 'while', 'of', 'at', 'by', 'for', 'with', 'about', 'against', 'between', 'into', 'through', 'during', 'before', 'after', 'above', 'below', 'to', 'from', 'up', 'down', 'in', 'out', 'on', 'off', 'over', 'under', 'again', 'further', 'then', 'once', 'here', 'there', 'when', 'where', 'why', 'how', 'all', 'any', 'both', 'each', 'few', 'more', 'most', 'other', 'some', 'such', 'no', 'nor', 'not', 'only', 'own', 'same', 'so', 'than', 'too', 'very', 's', 't', 'can', 'will', 'just', 'don', \"don't\", 'should', \"should've\", 'now', 'd', 'll', 'm', 'o', 're', 've', 'y', 'ain', 'aren', \"aren't\", 'couldn', \"couldn't\", 'didn', \"didn't\", 'doesn', \"doesn't\", 'hadn', \"hadn't\", 'hasn', \"hasn't\", 'haven', \"haven't\", 'isn', \"isn't\", 'ma', 'mightn', \"mightn't\", 'mustn', \"mustn't\", 'needn', \"needn't\", 'shan', \"shan't\", 'shouldn', \"shouldn't\", 'wasn', \"wasn't\", 'weren', \"weren't\", 'won', \"won't\", 'wouldn', \"wouldn't\"]\n"]}]},{"cell_type":"code","source":["en_stopwords = stopwords.words('english')\n","\n","def remove_stopwords(text):\n","  result = []\n","  for token in text:\n","    if token not in en_stopwords:\n","      result.append(token)\n","\n","  return result\n","\n","#Test\n","text = \"this is the only solution of that question\".split()\n","remove_stopwords(text)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RGOo8kTJ1qEB","executionInfo":{"status":"ok","timestamp":1669263421351,"user_tz":-330,"elapsed":331,"user":{"displayName":"SHAMJAD MAZOOD NAZER RMCA 2021-2023 B","userId":"15753865148182756036"}},"outputId":"22474ec5-6471-45ab-8247-ec859ccc3874"},"execution_count":50,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['solution', 'question']"]},"metadata":{},"execution_count":50}]},{"cell_type":"code","source":["from nltk.stem import PorterStemmer\n","from nltk.tokenize import word_tokenize\n","\n","ps = PorterStemmer()\n","\n","sentance = \"Programmers program with programming languages\"\n","words = word_tokenize(sentance)\n","\n","for w in words:\n","  print(w, \" : \", ps.stem(w))\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Dd2kL_v62sIG","executionInfo":{"status":"ok","timestamp":1669263919433,"user_tz":-330,"elapsed":340,"user":{"displayName":"SHAMJAD MAZOOD NAZER RMCA 2021-2023 B","userId":"15753865148182756036"}},"outputId":"6cff7e72-5266-408b-9459-6ea3b6256e49"},"execution_count":51,"outputs":[{"output_type":"stream","name":"stdout","text":["Programmers  :  programm\n","program  :  program\n","with  :  with\n","programming  :  program\n","languages  :  languag\n"]}]}]}